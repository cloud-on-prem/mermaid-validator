name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Run tests
      run: npm test
    
    - name: Build
      run: npm run build
    
    - name: Test CLI
      run: |
        node dist/index.js validate tests/fixtures/valid.mmd
        ! node dist/index.js validate tests/fixtures/invalid.mmd

  release-please:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
      pull-requests: write
    
    steps:
    - uses: googleapis/release-please-action@v4
      id: release
      with:
        release-type: node
        token: ${{ secrets.RELEASE_PLEASE_TOKEN || secrets.GITHUB_TOKEN }}
    
    - uses: actions/checkout@v4
      if: ${{ steps.release.outputs.release_created }}
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      if: ${{ steps.release.outputs.release_created }}
      with:
        node-version: '20.x'
        registry-url: 'https://registry.npmjs.org'
        cache: 'npm'
    
    - name: Install dependencies
      if: ${{ steps.release.outputs.release_created }}
      run: npm ci
    
    - name: Build
      if: ${{ steps.release.outputs.release_created }}
      run: npm run build
    
    - name: Publish to NPM
      if: ${{ steps.release.outputs.release_created }}
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
